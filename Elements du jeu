1. Une grille de dim 10 sur 10
    Front
    - Numeroter les lignes et les colonnes
    
    Back
    - Eventlisteners (ex. onclick une croix s'affiche si...)
2. Bot
3. Initialisation du jeu
4. Bateaux
    -Nombres de bateaux
        - 1 de 5
        - 1 de 4
        - 2 de 3
        - 1 de 2
    -Contraintes
        - Bateaux que sur les lignes (soit verticalement, soit horizontalement)
        - Respecter la taille de la matrice
        - Pas de chevauchement des bateaux
    -Etapes pour placer les bateaux dans la grille (coté bot)
        1. On itere on commencant par le plus grand bateaux
        2. Calcul sur dans quelles directions (d) à construire les bateaux (right, up, left, down)
        3. Si on au moins 2 d, on met toutes les directions autorisées dans une liste, et fait un choix random sur laquelle a prendre 

        -- Diviser la grille en zones? Fait changer les zones?

Séance mardi 10.12.24
Backend
- On essaie d'interdir les bateaux à se toucher en generant ses placements

Il nous reste à:
- Cacher les bateaux du bot pour que l'utilisateur ne peut pas les voir sur l'écran
    - Il suffit d'enlever la coloration des grilles et enregistrer les coordonnées des bateaux

- Créer une fonction qui montre/décide c'est à qui de jouer (c'est peut-être plutôt de front)
    - On ne peut que jouer une fois par tour...

- Créer une fonction qui place les choix du bot (sémi-aléatoirement)
    - if (x,y) est dans bateaux_player
         mémorise (x,y) et choisis (x+1,y) ou (x-1,y) ou (x, y+1) ou (x, y-1) comme le choix prochain
    - if (x,y) n'est pas dans bateaux_player
        choix prochain: random((x,y))

    Déterminons le niveau de l'intelligence du bot
    - Il connaît le nombre de bateaux et leurs tailles ? -> Il sait combien de bateaux (et leurs tailles) qui le reste ?
    - Si deux cases dans par ex. la direction y 
    